#!/usr/bin/env bash


#Make STAR genome index
# nohup /programs/STAR/STAR --runMode genomeGenerate --genomeDir STAR_GenomeDirectory --runThreadN 16 --genomeFastaFiles /local_data/Homo_sapiens_UCSC_hg19/WholeGenomeFasta/genome.fa --sjdbGTFfile /local_data/Homo_sapiens_UCSC_hg19/genes.gtf --sjdbOverhang 150

set -xe #Debug mode
mkdir -p temp
temp=$(mktemp -dt "$(basename $0).XXXXXXXXXX")
echo "hello"
# -v var="$variable"
# echo $temp

for FASTQ_GZ in "$@"
do
    samplename=$(basename -s ".fastq.gz" $FASTQ_GZ)
    echo "processing $samplename..."
    mkdir -p $samplename
    
    #Align reads with STAR
    STAR --genomeDir /project2/gilad/bjf79/genomes/GRCh38_Ensembl/STAR_genomedir/ --readFilesIn <(zcat $FASTQ_GZ) --outSAMunmapped Within --outSAMtype BAM SortedByCoordinate --outFileNamePrefix $samplename/ --alignEndsType EndToEnd --readMapNumber 10000  --outSAMattributes All --outReadsUnmapped Fastx
    
    # STAR --genomeDir /project2/gilad/bjf79/genomes/GRCh38_Ensembl/STAR_genomedir/ --readFilesIn <(zcat $FASTQ_GZ) --outSAMunmapped Within --outFileNamePrefix $samplename/ --alignEndsType EndToEnd --readMapNumber 10000  --outSAMattributes All
    #Create paired-end fastq files of unaligned reads split every possibly GT (with 15bp min anchor lenth) to map as lariat junctions. A read with multiple GT sites will be split into multiple read pairs. Really I am splitting at AC instances since we are sequencing the antisense strand.
    # samtools bam2fq -f 4 $samplename/Aligned.sortedByCoord.out.bam | paste -d"\t" - - - - | perl -F"\t" -lane 'while ($F[1] =~ /(?=[NAGCT]{13}(AC)[NAGCT]{15})/g) {if(defined($1)){printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", $F[0],substr($F[1],$+[1]),$F[2],substr($F[3],$+[1]),$F[0],substr($F[1],0,$+[1]),$F[2],substr($F[3],0,$+[1])}}' | awk -v OFS='\n' -F '\t' '{print $1,$2,$3,$4 > "./temp/myR1.fastq"; print $5,$6,$7,$8 > "./temp/myR2.fastq"}'
    cat $samplename/Unmapped.out.mate1 | paste -d"\t" - - - - | perl -F"\t" -lane 'while ($F[1] =~ /(?=[NAGCT]{13}(AC)[NAGCT]{15})/g) {if(defined($1)){printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", $F[0],substr($F[1],$+[1]),$F[2],substr($F[3],$+[1]),$F[0],substr($F[1],0,$+[1]),$F[2],substr($F[3],0,$+[1])}}' | awk  -v OFS='\n' -F '\t' '{print $1,$2,$3,$4}' > $temp/myR1.fastq
    cat $samplename/Unmapped.out.mate1 | paste -d"\t" - - - - | perl -F"\t" -lane 'while ($F[1] =~ /(?=[NAGCT]{13}(AC)[NAGCT]{15})/g) {if(defined($1)){printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", $F[0],substr($F[1],$+[1]),$F[2],substr($F[3],$+[1]),$F[0],substr($F[1],0,$+[1]),$F[2],substr($F[3],0,$+[1])}}' | awk  -v OFS='\n' -F '\t' '{print $5,$6,$7,$8}' > $temp/myR2.fastq
    
    #Align paired-end split reads
    # bowtie2 -p 20 --end-to-end --score-min L,-0.4,-0.4 --ff -I 20 -X 10000 --no-mixed --no-discordant -x /workdir/mr823/Bowtie2Index/genome -1 ./temp/myR1.fastq -2 ./temp/myR2.fastq | samtools view -bh - > ./temp/MyOutput.bam
    fastx_reverse_complement -i $temp/myR2.fastq | hisat2 --no-spliced-alignment --no-softclip -I 20 -X 10000 --no-mixed --no-discordant -x /home/bjf79/CurrentProjects/cheRNA_pilot/code/snakemake_workflow/temp/lariant_junctions/chr2_index/Chr2 -1 $temp/myR1.fastq -2 - | samtools view -bh - > $temp/MyOutput.bam
    
    #Filter paired-end alignments for the best alignment for each original read and covert to bed
    cat <(samtools view -H $temp/MyOutput.bam) <(samtools view -F 4 $temp/MyOutput.bam | paste -d"~" - - | perl -F"\t" -lne '$_ =~ m/NM:i:(\d+)\t.+NM:i:(\d+)\t/; print $1+$2 . "\t$_"' | sort -k2,2 -k1n,1 | sort -u -k2,2 | perl -lne '$_ =~ m/\d+\t(.+)~(.+)/; print "$1\n$2"') | samtools view -bh | bedtools bamtobed -bedpe -i - | awk -F'\t' -v OFS='\t' '$1!="." {print $1,$2,$6,".",".",$10}' | sort | uniq -c | awk -v OFS='\t' '{print $2,$3,$4,".",$1,$7}' > $temp/SplitReads.bed

    #Convert lariat junction PE alignments to junctions.bed similar to TopHat output
    bash /project/gilad/bjf79/projects/cheRNA_pilot/code/snakemake_workflow/scripts/bed_to_junctions.sh  $temp/SplitReads.bed $samplename/junctions.bed
    
    #Add the lariat junction alignments to the alignment file generated by STAR.
    # samtools merge -f $samplename/AllAlignments.bam $samplename/Aligned.sortedByCoord.out.bam ./temp/SplitReads.bam
done
